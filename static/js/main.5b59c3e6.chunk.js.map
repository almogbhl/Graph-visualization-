{"version":3,"sources":["components/GraphTree/GraphOptions.js","components/GraphTree/CalcAverage.js","components/GraphTree/GraphTree.js","App.js","index.js"],"names":["GraphOptions","layout","hierarchical","edges","font","color","strokeColor","align","dashes","length","nodes","border","background","highlight","size","face","shape","CalcAverage","students","map","student","total","average","scores","score","push","reduce","acc","val","parseInt","GraphTree","state","graph","options","studentsData","nodeTemplate","id","label","edgeTemplate","from","to","createBaseNodes","_this","manipulateData","counterChild","counterParent","counterAverage","u","_id","child","name","concat","s","type","setState","this","_this$state","react_default","a","createElement","lib_default","style","height","width","overflow","Component","App","Fragment","components_GraphTree_GraphTree","render","src_App","document","getElementById"],"mappings":"2yEAgCeA,EAhCM,WA6BnB,MA5BgB,CACdC,OAAQ,CACNC,cAAc,GAEhBC,MAAO,CACLC,KAAM,CAAEC,MAAO,OAAQC,YAAa,OAAQC,MAAO,UACnDC,QAAQ,EACRC,OAAQ,KAEVC,MAAO,CACLL,MAAO,CACLM,OAAQ,UACRC,WAAY,wBACZC,UAAW,CACTF,OAAQ,UACRC,WAAY,YAGhBR,KAAM,CACJC,MAAO,OACPS,KAAM,GACNC,KAAM,cACNR,MAAO,UAETS,MAAO,YCHEC,EAtBK,SAACC,GAmBnB,OAlBAA,EAASC,IAAI,SAAAC,GACX,IAAIC,EACAC,EACAC,EAAS,GAEbH,EAAQG,OAAOJ,IAAI,SAAAK,GACjBD,EAAOE,KAAKD,EAAMA,SAGpBH,EAAQE,EAAOG,OAAO,SAASC,EAAKC,GAClC,OAAOD,EAAMC,GACZ,GAEHN,EAAUO,SAASR,EAAQD,EAAQG,OAAOd,QAE1CW,EAAO,QAAcE,IAGhBJ,GC4GMY,6MAxHbC,MAAQ,CACNC,MAAO,KACPC,QAAS,KACTC,aAAc,QAShBC,aAAe,SAACC,EAAIC,EAAOhC,GACzB,MAAO,CACL+B,KACAC,QACAhC,YAIJiC,aAAe,SAACC,EAAMC,EAAIH,GACxB,MAAO,CACLE,OACAC,KACAH,YAIJI,gBAAkB,WAChB,IAAMN,EAAeO,EAAKP,aACpBG,EAAeI,EAAKJ,aACpBN,EAAQ,CACZtB,MAAO,GACPP,MAAO,IAEHO,EAAQsB,EAAMtB,MACdP,EAAQ6B,EAAM7B,MASpB,OAPAO,EAAMe,KAAKU,EAAa,EAAG,SAAU,CAAExB,OAAQ,OAAQC,WAAY,0BACnEF,EAAMe,KAAKU,EAAa,EAAG,SAAU,CAAExB,OAAQ,OAAQC,WAAY,0BACnEF,EAAMe,KAAKU,EAAa,EAAG,SAAU,CAAExB,OAAQ,OAAQC,WAAY,0BAEnET,EAAMsB,KAAKa,EAAa,EAAE,IAC1BnC,EAAMsB,KAAKa,EAAa,EAAE,IAEnBN,KAGTW,eAAiB,WACf,IAAMX,EAAQU,EAAKD,kBACbR,EAAUjC,IACVU,EAAQsB,EAAMtB,MACdP,EAAQ6B,EAAM7B,MACde,EAAWwB,EAAKX,MAAMG,aACtBC,EAAeO,EAAKP,aACpBG,EAAeI,EAAKJ,aAEtBM,EAAe,EACfC,EAAgB,EAChBC,EAAiB,EAErB5B,EAASC,IAAI,SAAA4B,GACX,GAAIA,EAAEC,KAAO,EAAG,CACd,IAAMC,EAAQF,EAAExB,OAEhBb,EAAMe,KAAKU,EAAaS,EAAcG,EAAEG,OACxCN,IACAlC,EAAMe,KAAKU,EAAaS,EAAD,GAAAO,OAAkBJ,EAAEzB,WAC3CsB,IAEIK,EAAMxC,QACRwC,EAAM9B,IAAI,SAAAiC,GACR,IAAM5B,EAAQK,SAASuB,EAAE5B,OAEzBrB,EAAMsB,KAAKa,EAAaO,EAAeD,EAAhB,GAAAO,OAAiCC,EAAEC,QAC1D3C,EAAMe,KAAKU,EAAaS,EAAD,GAAAO,OAAkB3B,GAAS,CAACZ,WAAY,iBAE/DkC,EAAiBD,EAAgB,EAEjC1C,EAAMsB,KAAKa,EAAaM,EAAcE,EAAgB,YAElDC,EAAEzB,SAAW,GACfnB,EAAMsB,KAAKa,EAAaQ,EAAgB,EAAG,cAE3C3C,EAAMsB,KAAKa,EAAaQ,EAAgB,EAAG,cAE7CF,MAGJC,EAAgBD,KAIpBF,EAAKY,SAAS,CACZrB,UACAD,mNAxFIE,EAAejB,EAAYC,YAC3BqC,KAAKD,SAAS,CAAEpB,wBACtBqB,KAAKZ,oJA0FE,IAAAa,EACkBD,KAAKxB,MAAvBC,EADAwB,EACAxB,MAAOC,EADPuB,EACOvB,QACd,OAAc,OAAVD,EACK,aAGHyB,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CACE1B,MAAOA,EACPC,QAASA,EACT4B,MAAO,CACLC,OAAQ,QACRC,MAAO,QACPC,SAAU,SACVpD,WAAY,8CAjHFqD,aCKTC,MARf,WACE,OACET,EAAAC,EAAAC,cAAAF,EAAAC,EAAAS,SAAA,KACEV,EAAAC,EAAAC,cAACS,EAAD,QCANC,iBACEZ,EAAAC,EAAAC,cAAAF,EAAAC,EAAAS,SAAA,KACEV,EAAAC,EAAAC,cAACW,EAAD,OAEFC,SAASC,eAAe","file":"static/js/main.5b59c3e6.chunk.js","sourcesContent":["const GraphOptions = () => {\n  const options = {\n    layout: {\n      hierarchical: false\n    },\n    edges: {\n      font: { color: \"#fff\", strokeColor: \"#000\", align: \"middle\" },\n      dashes: true,\n      length: 180\n    },\n    nodes: {\n      color: {\n        border: \"#BFEDF7\",\n        background: \"rgba(255,255,255,0.3)\",\n        highlight: {\n          border: \"#44C4D2\",\n          background: \"#246478\"\n        }\n      },\n      font: {\n        color: \"#FFF\",\n        size: 16,\n        face: \"Inconsolata\",\n        align: \"center\"\n      },\n      shape: \"circle\"\n    }\n  };\n\n  return options;\n};\n\nexport default GraphOptions;\n","const CalcAverage = (students) => {\n  students.map(student => {\n    let total;\n    let average;\n    let scores = [];\n\n    student.scores.map(score => {\n      scores.push(score.score);\n    });\n\n    total = scores.reduce(function(acc, val) {\n      return acc + val;\n    }, 0);\n\n    average = parseInt(total / student.scores.length);\n\n    student[\"average\"] = average;\n  });\n\n  return students\n};\n\nexport default CalcAverage;\n","import React, { Component } from \"react\";\nimport Graph from \"react-graph-vis\";\nimport students from \"../../data/students.json\";\nimport GraphOptions from \"./GraphOptions\";\nimport CalcAverage from \"./CalcAverage\";\n\nclass GraphTree extends Component {\n  state = {\n    graph: null,\n    options: null,\n    studentsData: null\n  };\n\n  async componentDidMount() {\n    const studentsData = CalcAverage(students);\n    await this.setState({ studentsData });\n    this.manipulateData();\n  };\n\n  nodeTemplate = (id, label, color) => {\n    return {\n      id,\n      label,\n      color\n    }\n  };\n\n  edgeTemplate = (from, to, label) => {\n    return {\n      from,\n      to,\n      label\n    }\n  };\n\n  createBaseNodes = () => {\n    const nodeTemplate = this.nodeTemplate;\n    const edgeTemplate = this.edgeTemplate;\n    const graph = {\n      nodes: [],\n      edges: []\n    };\n    const nodes = graph.nodes;\n    const edges = graph.edges;\n\n    nodes.push(nodeTemplate(1, \"grades\", { border: \"#fff\", background: \"rgba(241, 196, 15,1)\" }))\n    nodes.push(nodeTemplate(2, \"failed\", { border: \"#fff\", background: \"rgba(234, 32, 39,.4)\" }))\n    nodes.push(nodeTemplate(3, \"passed\", { border: \"#fff\", background: \"rgba(76, 209, 55,.4)\" }))\n   \n    edges.push(edgeTemplate(1,2));\n    edges.push(edgeTemplate(1,3));\n\n    return graph;\n  };\n\n  manipulateData = () => {\n    const graph = this.createBaseNodes();\n    const options = GraphOptions();\n    const nodes = graph.nodes;\n    const edges = graph.edges;\n    const students = this.state.studentsData;\n    const nodeTemplate = this.nodeTemplate;\n    const edgeTemplate = this.edgeTemplate;\n\n    let counterChild = 4;\n    let counterParent = 4;\n    let counterAverage = 4;\n\n    students.map(u => {\n      if (u._id >= 0) {\n        const child = u.scores;\n      \n        nodes.push(nodeTemplate(counterChild, u.name));\n        counterChild++;\n        nodes.push(nodeTemplate(counterChild, `${u.average}`));\n        counterChild++;\n\n        if (child.length) {\n          child.map(s => {\n            const score = parseInt(s.score);\n      \n            edges.push(edgeTemplate(counterParent, counterChild, `${s.type}`));\n            nodes.push(nodeTemplate(counterChild, `${score}`, {background: \"transparent\",}));\n\n            counterAverage = counterParent + 1;\n        \n            edges.push(edgeTemplate(counterChild, counterAverage, \"average\"));\n\n            if (u.average <= 56) {\n              edges.push(edgeTemplate(counterAverage, 2, \"hasFailed\"));\n            } else {\n              edges.push(edgeTemplate(counterAverage, 3, \"hasPassed\"));\n            }\n            counterChild++;\n          });\n        }\n        counterParent = counterChild;\n      }\n    });\n\n    this.setState({\n      options,\n      graph\n    });\n  };\n\n  render() {\n    const {graph, options} = this.state;\n    if (graph === null) {\n      return \"loading...\";\n    } else {\n      return (\n          <Graph\n            graph={graph}\n            options={options}\n            style={{\n              height: \"100vh\",\n              width: \"100vw\",\n              overflow: \"hidden\",\n              background: \"linear-gradient(#000116, #002538)\"\n            }}\n          />\n      );\n    }\n  }\n}\n\nexport default GraphTree;\n","import React from \"react\";\nimport GraphTree from \"./components/GraphTree/GraphTree\";\n\nfunction App() {\n  return (\n    <>\n      <GraphTree />\n    </>\n  );\n}\n\nexport default App;\n\n\n","import React from \"react\";\nimport { render } from \"react-dom\";\nimport './styles/index.css';\n\nimport App from \"./App\";\n\nrender(\n  <>\n    <App />\n  </>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}