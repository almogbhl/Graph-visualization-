{"version":3,"sources":["styles/global.styles.js","PrintGraph.js","PrintGraphConnections.js","App.js","index.js"],"names":["GlobalStyle","createGlobalStyle","_templateObject","Component","PrintGraph","state","graph","options","events","data","calcAverage","grades","map","u","scores","s","push","score","total","reduce","acc","val","average","parseInt","length","_this","setState","dataManipulation","nodes","edges","counter","counterParent","counterAverage","id","label","color","border","background","from","to","filter","_id","child","name","concat","highlight","type","layout","hierarchical","font","strokeColor","align","dashes","size","face","shape","this","react_default","a","createElement","lib_default","style","height","verflow","App","Wrapper","global_styles","PrintGraphConnections","styled","div","App_templateObject","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.1519acd1.chunk.js","sourcesContent":["import { createGlobalStyle } from \"styled-components\";\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n* {\r\n  margin: 0;\r\n  padding: 0;\r\n  box-sizing: inherit;\r\n  text-decoration: none;\r\n  list-style: none;\r\n}\r\nhtml {\r\n  font-size: 62.5%;\r\n}\r\nbody {\r\n  box-sizing: border-box;\r\n  font-family: 'Inconsolata' ,-apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Oxygen\",\r\n    \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\",\r\n    sans-serif;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n  background: linear-gradient(#000116, #002538);\r\n}\r\ncode {\r\n  font-family: source-code-pro, Menlo, Monaco, Consolas, \"Courier New\",\r\n    monospace;\r\n}\r\n`;\r\n\r\nexport default GlobalStyle;","import React, { Component } from \"react\";\r\nimport Graph from \"react-graph-vis\";\r\nimport styled from \"styled-components\";\r\nimport grades from \"./grades.json\";\r\n\r\nclass PrintGraph extends Component {\r\n  state = {\r\n    graph: null,\r\n    options: null,\r\n    events: null\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.dataManipulation();\r\n  }\r\n\r\n  dataManipulation = () => {\r\n    let graph = {\r\n      nodes: [],\r\n      edges: []\r\n    };\r\n    let counter = 1;\r\n    let counterParent = 1;\r\n\r\n    let users = grades.filter(u => u._id <= 35);\r\n\r\n    let data = users.map(g => {\r\n      if (g._id >= 0) {\r\n        const child = g.scores;\r\n        graph.nodes.push({\r\n          id: counter,\r\n          label: g.name\r\n        });\r\n        counter++;\r\n\r\n        if (child.length) {\r\n          child.map(s => {\r\n            const score = parseInt(s.score);\r\n\r\n            graph.nodes.push({\r\n              id: counter,\r\n              label: `${score}`,\r\n              color: {\r\n                border: \"#BFEDF7\",\r\n                background: \"transparent\",\r\n                \r\n                highlight: {\r\n                  border: \"#44C4D2\",\r\n                  background: \"#246478\",\r\n                }\r\n            }});\r\n\r\n            graph.edges.push({\r\n              from: counterParent,\r\n              to: counter,\r\n              label: `${s.type}`\r\n            });\r\n\r\n            counter++;\r\n          });\r\n        }\r\n\r\n        counterParent = counter;\r\n      }\r\n    });\r\n\r\n    const options = {\r\n      layout: {\r\n        hierarchical: false\r\n      },\r\n      edges: {\r\n        font: {color: '#fff', strokeColor: '#000', align: \"middle\"},\r\n        dashes: true,\r\n        length: 180,\r\n        \r\n      },\r\n      nodes: {\r\n        color: {\r\n          border: \"#BFEDF7\",\r\n          background: \"rgba(255,255,255,0.3)\",\r\n          highlight: {\r\n            border: \"#44C4D2\",\r\n            background: \"#246478\",\r\n          }\r\n        },\r\n        font: {\r\n          color: \"#FFF\",\r\n          size: 16, \r\n          face: \"Inconsolata\",\r\n          align: \"center\"\r\n        },\r\n        shape: \"circle\"\r\n        \r\n      }\r\n    };\r\n\r\n    this.setState({\r\n      options,\r\n      graph\r\n    });\r\n  };\r\n\r\n  render() {\r\n    if (this.state.graph) {\r\n      return (\r\n        <div>\r\n          <Graph\r\n            graph={this.state.graph}\r\n            options={this.state.options}\r\n            events={this.state.events}\r\n            style={{\r\n              height: \"100vh\",\r\n              verflow: \"hidden\",\r\n              background: \"linear-gradient(#000116, #002538)\"\r\n            }}\r\n          />\r\n        </div>\r\n      );\r\n    } else {\r\n      return \"Loading\";\r\n    }\r\n  }\r\n}\r\n\r\nexport default PrintGraph;\r\n","import React, { Component } from \"react\";\r\nimport Graph from \"react-graph-vis\";\r\nimport grades from \"./grades.json\";\r\n\r\nclass PrintGraph extends Component {\r\n  state = {\r\n    graph: null,\r\n    options: null,\r\n    events: null,\r\n    data: null\r\n  };\r\n\r\n  async componentDidMount() {\r\n    await this.calcAverage();\r\n    this.dataManipulation();\r\n  }\r\n\r\n  calcAverage = () => {\r\n    let data = grades.map(u => {\r\n      let scores = [];\r\n      u.scores.map(s => {\r\n        scores.push(s.score);\r\n      });\r\n      let total = scores.reduce(function(acc, val) {\r\n        return acc + val;\r\n      }, 0);\r\n      let average = parseInt(total / u.scores.length);\r\n\r\n      u[\"average\"] = average;\r\n    });\r\n\r\n    this.setState({ data: grades });\r\n  };\r\n\r\n  dataManipulation = () => {\r\n    let graph = {\r\n      nodes: [],\r\n      edges: []\r\n    };\r\n    let counter = 4;\r\n    let counterParent = 4;\r\n    let counterAverage = 4;\r\n\r\n    graph.nodes.push(\r\n      {\r\n        id: 1,\r\n        label: \"grades\",\r\n        color: { border: \"#fff\", background: \"rgba(241, 196, 15,1)\" }\r\n      },\r\n      {\r\n        id: 2,\r\n        label: \"failed\",\r\n        color: { border: \"#fff\", background: \"rgba(234, 32, 39,.4)\" }\r\n      },\r\n      {\r\n        id: 3,\r\n        label: \"passed\",\r\n        color: { border: \"#fff\", background: \"rgba(76, 209, 55,.4)\" }\r\n      }\r\n    );\r\n\r\n    graph.edges.push({ from: 1, to: 2 }, { from: 1, to: 3 });\r\n\r\n    let users = this.state.data.filter(u => u._id <= 12);\r\n\r\n    let data = users.map(u => {\r\n      if (u._id >= 0) {\r\n        const child = u.scores;\r\n\r\n        graph.nodes.push({\r\n          id: counter,\r\n          label: u.name\r\n        });\r\n        counter++;\r\n\r\n        graph.nodes.push({\r\n          id: counter,\r\n          label: `${u.average}`\r\n        });\r\n        counter++;\r\n\r\n        if (child.length) {\r\n          child.map(s => {\r\n            const score = parseInt(s.score);\r\n\r\n            graph.nodes.push({\r\n              id: counter,\r\n              label: `${score}`,\r\n              color: {\r\n                border: \"#BFEDF7\",\r\n                background: \"transparent\",\r\n\r\n                highlight: {\r\n                  border: \"#44C4D2\",\r\n                  background: \"#246478\"\r\n                }\r\n              }\r\n            });\r\n\r\n            graph.edges.push({\r\n              from: counterParent,\r\n              to: counter,\r\n              label: `${s.type}`\r\n            });\r\n            counterAverage = counterParent + 1;\r\n            graph.edges.push({\r\n              from: counter,\r\n              to: counterAverage,\r\n              label: `average`\r\n            });\r\n\r\n            if (u.average <= 56) {\r\n              graph.edges.push({\r\n                from: counterAverage,\r\n                to: 2,\r\n                label: \"hasFailed\"\r\n              });\r\n            } else {\r\n              graph.edges.push({\r\n                from: counterAverage,\r\n                to: 3,\r\n                label: \"hasPassed\"\r\n              });\r\n            }\r\n            counter++;\r\n          });\r\n        }\r\n\r\n        counterParent = counter;\r\n      }\r\n    });\r\n\r\n    const options = {\r\n      layout: {\r\n        hierarchical: false\r\n      },\r\n      edges: {\r\n        font: { color: \"#fff\", strokeColor: \"#000\", align: \"middle\" },\r\n        dashes: true,\r\n        length: 180\r\n      },\r\n      nodes: {\r\n        color: {\r\n          border: \"#BFEDF7\",\r\n          background: \"rgba(255,255,255,0.3)\",\r\n          highlight: {\r\n            border: \"#44C4D2\",\r\n            background: \"#246478\"\r\n          }\r\n        },\r\n        font: {\r\n          color: \"#FFF\",\r\n          size: 16,\r\n          face: \"Inconsolata\",\r\n          align: \"center\"\r\n        },\r\n        shape: \"circle\"\r\n      }\r\n    };\r\n\r\n    this.setState({\r\n      options,\r\n      graph\r\n    });\r\n  };\r\n\r\n  render() {\r\n    if (this.state.graph) {\r\n      return (\r\n        <div>\r\n          <Graph\r\n            graph={this.state.graph}\r\n            options={this.state.options}\r\n            events={this.state.events}\r\n            style={{\r\n              height: \"100vh\",\r\n              verflow: \"hidden\",\r\n              background: \"linear-gradient(#000116, #002538)\"\r\n            }}\r\n          />\r\n        </div>\r\n      );\r\n    } else {\r\n      return \"Loading\";\r\n    }\r\n  }\r\n}\r\n\r\nexport default PrintGraph;\r\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport GlobalStyle from './styles/global.styles';\nimport PrintGraph from \"./PrintGraph\";\nimport PrintGraphConnections from \"./PrintGraphConnections\";\n\nfunction App() {\n  return (\n    <Wrapper>\n      <GlobalStyle />\n\n      <PrintGraphConnections />\n    </Wrapper>\n  );\n}\n\nexport default App;\n\nconst Wrapper = styled.div`\n   \n`;\n\n","import React from \"react\";\nimport { render } from \"react-dom\";\n\nimport App from \"./App\";\n\nrender(\n  <div>\n    <App />\n  </div>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}